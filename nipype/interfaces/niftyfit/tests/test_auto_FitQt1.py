# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..qt1 import FitQt1


def test_FitQt1_inputs():
    input_map = dict(IR=dict(argstr='-SR',
    ),
    SPGR=dict(argstr='-SPGR',
    ),
    SR=dict(argstr='-SR',
    ),
    T1Lists=dict(argstr='-T1List %s',
    ),
    TE=dict(argstr='-TE %f',
    ),
    TIs=dict(argstr='-TIs %s',
    sep=' ',
    ),
    TR=dict(argstr='-TR %f',
    ),
    args=dict(argstr='%s',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    error_file=dict(argstr='-error %s',
    genfile=True,
    name_source=['source_file'],
    name_template='%s_error',
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    m0map=dict(argstr='-m0map %s',
    genfile=True,
    name_source=['source_file'],
    name_template='%s_m0map',
    ),
    mask=dict(argstr='-mask %s',
    ),
    mcmap=dict(argstr='-mcmap %s',
    genfile=True,
    name_source=['source_file'],
    name_template='%s_mcmap',
    ),
    prior=dict(argstr='-prior %s',
    ),
    res_file=dict(argstr='-res %s',
    genfile=True,
    name_source=['source_file'],
    name_template='%s_res',
    ),
    source_file=dict(argstr='-source %s',
    mandatory=True,
    position=2,
    ),
    syn_file=dict(argstr='-syn %s',
    genfile=True,
    name_source=['source_file'],
    name_template='%s_syn',
    ),
    t1map=dict(argstr='-t1map %s',
    genfile=True,
    name_source=['source_file'],
    name_template='%s_t1map',
    ),
    terminal_output=dict(nohash=True,
    ),
    )
    inputs = FitQt1.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_FitQt1_outputs():
    output_map = dict(error_file=dict(),
    m0map=dict(),
    mcmap=dict(),
    res_file=dict(),
    syn_file=dict(),
    t1map=dict(),
    )
    outputs = FitQt1.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value
